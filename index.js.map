{"mappings":";;;;;;;;;;;;;;;ACKA,SAAS;IACP,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,eAAO,EAAE,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,eAAO,EAAE;QAAE,MAAM;QAAI,OAAO;QAAI,OAAO;IAAG;IACxE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,eAAO,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,eAAO,EAAE;QAC3C,MAAM;QACN,OAAO;QACP,OAAO;IACT;IAEA,CAAA,GAAA,gBAAQ,EAAE;QACR,MAAM,8CACH,KAAK,CAAC,WAAa,SAAS,QAC5B,KAAK,CAAC,OAAS,SAAS,OACxB,MAAM,CAAC,QAAU,QAAQ,MAAM,yBAAyB;IAC7D,GAAG,EAAE;IAEL,MAAM,mBAAmB;QACvB,IAAI;YACF,MAAM,WAAW,MAAM,MACrB,8CACA;gBACE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,UAAU;YACvB;YAGF,MAAM,OAAO,MAAM,SAAS;YAC5B,SAAS;mBAAI;gBAAO;aAAK;YACzB,WAAW;gBAAE,MAAM;gBAAI,OAAO;gBAAI,OAAO;YAAG;YAC5C,CAAA,GAAA,YAAI,EAAE,QAAQ;QAChB,EAAE,OAAO,OAAO;YACd,QAAQ,MAAM,wBAAwB;YACtC,CAAA,GAAA,YAAI,EAAE,MAAM;QACd;IACF;IAEA,MAAM,iBAAiB,CAAC,QAAQ;QAC9B,cAAc;QACd,cAAc;IAChB;IAEA,MAAM,mBAAmB;QACvB,IAAI;YACF,MAAM,WAAW,MAAM,MACrB,CAAC,2CAA2C,EAAE,WAAW,CAAC,EAC1D;gBACE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,UAAU;YACvB;YAGF,MAAM,OAAO,MAAM,SAAS;YAC5B,MAAM,eAAe,MAAM,IAAI,CAAC,OAC9B,KAAK,OAAO,aAAa,OAAO;YAElC,SAAS;YACT,cAAc;YACd,cAAc;gBAAE,MAAM;gBAAI,OAAO;gBAAI,OAAO;YAAG;YAC/C,CAAA,GAAA,YAAI,EAAE,QAAQ;QAChB,EAAE,OAAO,OAAO;YACd,QAAQ,MAAM,wBAAwB;YACtC,CAAA,GAAA,YAAI,EAAE,MAAM;QACd;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,IAAI;YACF,MAAM,MAAM,CAAC,2CAA2C,EAAE,OAAO,CAAC,EAAE;gBAClE,QAAQ;YACV;YAEA,MAAM,eAAe,MAAM,OAAO,CAAC,OAAS,KAAK,OAAO;YACxD,SAAS;YACT,CAAA,GAAA,YAAI,EAAE,QAAQ;QAChB,EAAE,OAAO,OAAO;YACd,QAAQ,MAAM,wBAAwB;YACtC,CAAA,GAAA,YAAI,EAAE,MAAM;QACd;IACF;IAEA,qBACE,iBAAC;QAAI,WAAU;;0BACb,iBAAC;gBAAI,WAAU;;kCACb,gBAAC;kCAAG;;kCACJ,gBAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO,QAAQ;wBACf,UAAU,CAAC,IAAM,WAAW;gCAAE,GAAG,OAAO;gCAAE,MAAM,EAAE,OAAO;4BAAM;;kCAEjE,gBAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO,QAAQ;wBACf,UAAU,CAAC,IAAM,WAAW;gCAAE,GAAG,OAAO;gCAAE,OAAO,EAAE,OAAO;4BAAM;;kCAElE,gBAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO,QAAQ;wBACf,UAAU,CAAC,IAAM,WAAW;gCAAE,GAAG,OAAO;gCAAE,OAAO,EAAE,OAAO;4BAAM;;kCAElE,gBAAC;wBAAO,SAAS;kCAAkB;;;;0BAGrC,iBAAC;gBAAI,WAAU;;kCACb,gBAAC;kCAAG;;kCACJ,gBAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI,CAAC,qBACV,iBAAC;gCAAI,WAAU;;kDACb,iBAAC;wCAAI,WAAU;;0DACb,gBAAC;0DAAO;;4CAAc;4CAAE,KAAK;0DAC7B,gBAAC;0DACD,gBAAC;0DAAO;;4CAAe;4CAAE,KAAK;0DAC9B,gBAAC;0DACD,gBAAC;0DAAO;;4CAAe;4CAAE,KAAK;0DAC9B,gBAAC;;;kDAEH,iBAAC;wCAAI,WAAU;;0DACb,gBAAC;gDAAO,SAAS,IAAM,eAAe,KAAK,IAAI;0DAAO;;0DAGtD,gBAAC;gDAAO,SAAS,IAAM,iBAAiB,KAAK;0DAAK;;;;oCAInD,cAAY,KAAK,oBAChB,iBAAC;wCAAI,WAAU;;0DACb,gBAAC;0DAAG;;0DACJ,gBAAC;gDACC,MAAK;gDACL,aAAY;gDACZ,OAAO,WAAW;gDAClB,UAAU,CAAC,IACT,cAAc;wDAAE,GAAG,UAAU;wDAAE,MAAM,EAAE,OAAO;oDAAM;;0DAGxD,gBAAC;gDACC,MAAK;gDACL,aAAY;gDACZ,OAAO,WAAW;gDAClB,UAAU,CAAC,IACT,cAAc;wDAAE,GAAG,UAAU;wDAAE,OAAO,EAAE,OAAO;oDAAM;;0DAGzD,gBAAC;gDACC,MAAK;gDACL,aAAY;gDACZ,OAAO,WAAW;gDAClB,UAAU,CAAC,IACT,cAAc;wDAAE,GAAG,UAAU;wDAAE,OAAO,EAAE,OAAO;oDAAM;;0DAGzD,gBAAC;gDAAO,SAAS;0DAAkB;;;;;+BA5CT,KAAK;;;;0BAsD3C,gBAAC,CAAA,GAAA,qBAAa;;;AAGpB;IAEA,2CAAe;;;ADhLf,MAAM,6BAAO,CAAA,GAAA,qBAAO,EAAE,WAAW,SAAS,eAAe;AACzD,2BAAK,qBACH;cACE,cAAA,gBAAC,CAAA,GAAA,wCAAE","sources":["src/index.js","src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <>\r\n    <App />\r\n  </>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Styles/App.css\";\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState([]);\r\n  const [newUser, setNewUser] = useState({ name: \"\", email: \"\", phone: \"\" });\r\n  const [editUserId, setEditUserId] = useState(null);\r\n  const [editedUser, setEditedUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((data) => setUsers(data))\r\n      .catch((error) => console.error(\"Error fetching users:\", error));\r\n  }, []);\r\n\r\n  const handleCreateUser = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(newUser),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      setUsers([...users, data]);\r\n      setNewUser({ name: \"\", email: \"\", phone: \"\" });\r\n      toast.success(\"User created successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error creating user:\", error);\r\n      toast.error(\"Error creating user\");\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (userId, userData) => {\r\n    setEditUserId(userId);\r\n    setEditedUser(userData);\r\n  };\r\n\r\n  const handleUpdateUser = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://jsonplaceholder.typicode.com/users/${editUserId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(editedUser),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      const updatedUsers = users.map((user) =>\r\n        user.id === editUserId ? data : user\r\n      );\r\n      setUsers(updatedUsers);\r\n      setEditUserId(null);\r\n      setEditedUser({ name: \"\", email: \"\", phone: \"\" });\r\n      toast.success(\"User updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n      toast.error(\"Error updating user\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (userId) => {\r\n    try {\r\n      await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      const updatedUsers = users.filter((user) => user.id !== userId);\r\n      setUsers(updatedUsers);\r\n      toast.success(\"User deleted successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting user:\", error);\r\n      toast.error(\"Error deleting user\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"create-user\">\r\n        <h2>Create User</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={newUser.name}\r\n          onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          value={newUser.email}\r\n          onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Phone\"\r\n          value={newUser.phone}\r\n          onChange={(e) => setNewUser({ ...newUser, phone: e.target.value })}\r\n        />\r\n        <button onClick={handleCreateUser}>Create</button>\r\n      </div>\r\n\r\n      <div className=\"users-list\">\r\n        <h1>User List</h1>\r\n        <div className=\"user-cards\">\r\n          {users.map((user) => (\r\n            <div className=\"user-card\" key={user.id}>\r\n              <div className=\"user-card-content\">\r\n                <strong>Name:</strong> {user.name}\r\n                <br />\r\n                <strong>Email:</strong> {user.email}\r\n                <br />\r\n                <strong>Phone:</strong> {user.phone}\r\n                <br />\r\n              </div>\r\n              <div className=\"user-card-buttons\">\r\n                <button onClick={() => handleEditUser(user.id, user)}>\r\n                  Edit\r\n                </button>\r\n                <button onClick={() => handleDeleteUser(user.id)}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n              {editUserId==user.id && (\r\n                <div className=\"edit-user\">\r\n                  <h2>Edit User</h2>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    value={editedUser.name}\r\n                    onChange={(e) =>\r\n                      setEditedUser({ ...editedUser, name: e.target.value })\r\n                    }\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={editedUser.email}\r\n                    onChange={(e) =>\r\n                      setEditedUser({ ...editedUser, email: e.target.value })\r\n                    }\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Phone\"\r\n                    value={editedUser.phone}\r\n                    onChange={(e) =>\r\n                      setEditedUser({ ...editedUser, phone: e.target.value })\r\n                    }\r\n                  />\r\n                  <button onClick={handleUpdateUser}>Update</button>\r\n                </div>\r\n              )}\r\n        \r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n     \r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":[],"version":3,"file":"index.js.map"}